#!/bin/bash

set -euo pipefail

# this script performs several sanity checks on a directory that will
# be backed up

function msg {
    echo "${@}" >&2
}

global_fail=0

if [[ ! -d "${1}" ]]; then
    msg "not a dir: '${1}'"
    exit 1
fi

function get_git_repos {
    find "${1}" -type d -name .git -exec dirname '{}' \;
}

function check_git_repo {
    msg -n "checking repo $(pwd): "

    local fail=0
    git fsck &>/dev/null || fail=1

    if [[ "${fail}" -ne 0 ]]; then
        msg "corrupted! [fail]"
        global_fail=1
    else
        msg "ok"
    fi
}

function check_git_repos {
    # check for corrupted git repos

    while read -d $'\n' repo; do
        ( cd "${repo}"; check_git_repo < /dev/null; )
    done < <(get_git_repos "${1}")
}

function check_sync_conflicts {
    # check for 'sync-conflict' files generated by syncthing

    while read -d $'\n' scf; do
        msg "found sync conflict file: ${scf}"
        global_fail=1
    done < <(find "${1}" -name '*.sync-conflict*')
}

check_sync_conflicts "${1}"
check_git_repos "${1}"

if [[ "${global_fail}" -ne 0 ]]; then
    exit 1
fi
